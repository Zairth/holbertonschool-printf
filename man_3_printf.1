.TH _PRINTF 3 "November 2024" "1.0" "Custom C Library Functions"
.SH NAME
_printf \- Custom implementation of the printf function.
.SH SYNOPSIS
.B #include "main.h"
.br
.B int _printf(const char *format, ...);
.SH DESCRIPTION
The
.B _printf
function is a custom implementation of the standard
.B printf
function. It produces output according to a format string and supports the following conversion specifiers:

.TP
.B %s
Prints a string of characters.
.TP
.B %c
Prints a single character.
.TP
.B %d, %i
Prints a signed integer in base 10.

The
.B _printf
function processes the format string and replaces each conversion specifier with the corresponding argument value provided in the variadic list.

.P
If a literal `%` is needed, use `%%`.

.SH RETURN VALUE
The
.B _printf
function returns the total number of characters printed (excluding the null terminator). If
.B format
is NULL, the function returns -1.

.SH EXAMPLES
.B Example 1: Printing a string
.nf
#include "main.h"

int main(void)
{
    _printf("Hello, %s!\\n", "world");
    return (0);
}
.fi

.B Example 2: Printing integers
.nf
#include "main.h"

int main(void)
{
    _printf("The number is: %d\\n", 42);
    return (0);
}
.fi

.SH NOTES
- The
.B _printf
function does not support advanced format specifiers such as `%f`, `%x`, or `%p`.
- It uses the
.B _putchar
function to write individual characters to the standard output.

.SH Authors 
Luca Gimenez & Etienne Loichot
